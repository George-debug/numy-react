{"version":3,"sources":["ButtonsFunctionsProvider.jsx","Console/Template/ConsoleComps.jsx","Console/Template/slimLayout.js","Console/Template/squaredLayout.js","Console/Template/wideLayout.js","Console/Template/index.jsx","MeasureAndRender/index.jsx","Console/index.jsx","Games/GameClass.jsx","Games/Numy/matrixManipulation.js","Games/Numy/index.jsx","Games/index.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["ButtonsFunctionsContext","createContext","nullFunc","consoleButton","name","action","initialButtons","small","medium","left","up","right","down","big","objIsEmpty","obj","Object","keys","length","constructor","unifySegment","mainSegment","namesSegment","actionsSegment","undefined","entries","forEach","key","nextSegment","unifyButtons","newNames","newActions","newButtons","ButtonsFunctionsProvider","children","useState","buttons","setButtons","Provider","value","buttonConfig","duration","useAlphaPush","clicked","setClicked","alpha","useSpring","config","bind","onMouseDown","onMouseUp","onMouseLeave","Speaker","top","unit","x","y","width","height","fillOpacity","Body","props","bottom","coloredPath","fill","color","d","Wide","wide","Screen","SmallButton","rect","interpolate","a","SmallButtons","coords","useContext","map","coord","i","ButtonShadow","animated","Button","halfUnit","underPath","className","g","style","transform","ArrowButtons","BigButton","Diagonal","Diagonals","slimLayout","size","smallButtonGap","smallButtonTop","smallButtonLeft","body","screen","smallButtons","Array","c","arrowButtons","bigButton","diagonals","squaredLayout","smallButtonsLeft","smallButtonsTop","smallButtonsGap","wideLayout","l","ConsoleTemplate","layout","ratio","Math","min","version","viewBox","React","cloneElement","Children","only","MeasureAndRender","state","measurement","hasMeasured","onWindowResize","debounce","setState","el","getBoundingClientRect","this","window","addEventListener","removeEventListener","stretch","position","childrenWithProps","child","isValidElement","ref","node","Component","Console","GameClass","names","changeButtons","context","restart","levels","0","contextType","shuffleArray","list","__element","index","newIndex","floor","random","generateKeyMatrix","matrixSize","matrix","ceil","Cell","val","isSelected","onClick","Games","handleCellClick","selected","p1","p2","keyMatrix","wasChanged","matrixValuesAreValid","matrixCheckRow","matrixCheckColumn","checkKeyMatrix","level","addMix","linkButtons","gameSize","SquaredOrTall","gameUnit","App","CurrentGame","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1b23ef96.chunk.js","sourcesContent":["import React, { useState, createContext } from \"react\";\r\n\r\nconst ButtonsFunctionsContext = createContext();\r\n\r\nconst nullFunc = () => null;\r\nconst consoleButton = (name, action) => ({ name, action });\r\n\r\nconst initialButtons = {\r\n    small: [\r\n        consoleButton(\"Restart\", nullFunc),\r\n        consoleButton(\"Levels\", nullFunc),\r\n        consoleButton(\"Games\", nullFunc),\r\n        consoleButton(\"On/Off\", nullFunc),\r\n    ],\r\n    medium: {\r\n        left: consoleButton(\"\", nullFunc),\r\n        up: consoleButton(\"\", nullFunc),\r\n        right: consoleButton(\"\", nullFunc),\r\n        down: consoleButton(\"\", nullFunc),\r\n    },\r\n    big: consoleButton(\"\", nullFunc),\r\n};\r\n\r\nconst objIsEmpty = (obj) =>\r\n    obj && Object.keys(obj).length === 0 && obj.constructor === Object;\r\n\r\nconst unifySegment = (mainSegment, namesSegment, actionsSegment) => {\r\n    if (objIsEmpty(namesSegment) && objIsEmpty(actionsSegment)) return;\r\n    if (mainSegment.action !== undefined) {\r\n        mainSegment.action = actionsSegment ?? mainSegment.action;\r\n        mainSegment.name = namesSegment ?? mainSegment.name;\r\n        return;\r\n    }\r\n    //console.log(\"mainSegment\", mainSegment);\r\n    //console.log(\"namesSegment\", namesSegment);\r\n    //console.log(\"actionsSegment\", actionsSegment);\r\n    Object.entries(mainSegment).forEach(([key, nextSegment]) => {\r\n        unifySegment(\r\n            nextSegment,\r\n            namesSegment[key] ?? {},\r\n            actionsSegment[key] ?? {}\r\n        );\r\n    });\r\n};\r\n\r\nconst unifyButtons = (newNames, newActions) => {\r\n    var newButtons = { ...initialButtons };\r\n\r\n    unifySegment(newButtons, newNames, newActions);\r\n    //console.log(newButtons);\r\n\r\n    return newButtons;\r\n};\r\n\r\nfunction ButtonsFunctionsProvider({ children }) {\r\n    const [buttons, setButtons] = useState(initialButtons);\r\n\r\n    const changeButtons = (newNames, newActions) =>\r\n        setButtons(unifyButtons(newNames, newActions));\r\n\r\n    return (\r\n        <ButtonsFunctionsContext.Provider value={[buttons, changeButtons]}>\r\n            {children}\r\n        </ButtonsFunctionsContext.Provider>\r\n    );\r\n}\r\n\r\nexport { ButtonsFunctionsContext, ButtonsFunctionsProvider };\r\n","import React, { useContext, useState } from \"react\";\r\nimport { useSpring, animated } from \"react-spring\";\r\n\r\nimport { ButtonsFunctionsContext } from \"../../ButtonsFunctionsProvider\";\r\n\r\nconst buttonConfig = { duration: 90 };\r\n/*const buttonConfig = {\r\n    mass: 0.5,\r\n    tension: 500,\r\n    friction: 14,\r\n    clamp: true,\r\n};*/\r\nconst useAlphaPush = (action) => {\r\n    const [clicked, setClicked] = useState(false);\r\n\r\n    const { alpha } = useSpring({\r\n        alpha: clicked ? 1 : 0,\r\n        config: buttonConfig,\r\n    });\r\n\r\n    const bind = {\r\n        onMouseDown: () => {\r\n            setClicked(true);\r\n            action();\r\n        },\r\n        onMouseUp: () => setClicked(false),\r\n        onMouseLeave: () => setClicked(false),\r\n    };\r\n\r\n    return { alpha, bind };\r\n};\r\n\r\nconst Speaker = ({ left, top, unit }) => {\r\n    return (\r\n        <g>\r\n            <g>\r\n                <rect\r\n                    x={left}\r\n                    y={top + unit * 3}\r\n                    width={unit}\r\n                    height={unit}\r\n                    fillOpacity=\".5\"\r\n                />\r\n                <rect\r\n                    x={left}\r\n                    y={top + unit * 5}\r\n                    width={unit}\r\n                    height={unit}\r\n                    fillOpacity=\".5\"\r\n                />\r\n\r\n                <rect\r\n                    x={left + unit * 2}\r\n                    y={top + unit * 3}\r\n                    width={unit}\r\n                    height={unit}\r\n                    fillOpacity=\".5\"\r\n                />\r\n                <rect\r\n                    x={left + unit * 2}\r\n                    y={top + unit * 5}\r\n                    width={unit}\r\n                    height={unit}\r\n                    fillOpacity=\".5\"\r\n                />\r\n                <rect\r\n                    x={left + unit * 2}\r\n                    y={top + unit}\r\n                    width={unit}\r\n                    height={unit}\r\n                    fillOpacity=\".5\"\r\n                />\r\n\r\n                <rect\r\n                    x={left + unit * 4}\r\n                    y={top + unit * 3}\r\n                    width={unit}\r\n                    height={unit}\r\n                    fillOpacity=\".5\"\r\n                />\r\n                <rect\r\n                    x={left + unit * 4}\r\n                    y={top + unit}\r\n                    width={unit}\r\n                    height={unit}\r\n                    fillOpacity=\".5\"\r\n                />\r\n            </g>\r\n            <g>\r\n                <rect\r\n                    x={left + unit}\r\n                    y={top + unit * 2}\r\n                    width={unit}\r\n                    height={unit}\r\n                    fillOpacity=\".1\"\r\n                />\r\n                <rect\r\n                    x={left + unit}\r\n                    y={top + unit * 4}\r\n                    width={unit}\r\n                    height={unit}\r\n                    fillOpacity=\".1\"\r\n                />\r\n                <rect\r\n                    x={left + unit * 3}\r\n                    y={top}\r\n                    width={unit}\r\n                    height={unit}\r\n                    fillOpacity=\".1\"\r\n                />\r\n                <rect\r\n                    x={left + unit * 3}\r\n                    y={top + unit * 2}\r\n                    width={unit}\r\n                    height={unit}\r\n                    fillOpacity=\".1\"\r\n                />\r\n                <rect\r\n                    x={left + unit * 3}\r\n                    y={top + unit * 4}\r\n                    width={unit}\r\n                    height={unit}\r\n                    fillOpacity=\".1\"\r\n                />\r\n            </g>\r\n        </g>\r\n    );\r\n};\r\n\r\nexport const Body = (props) => {\r\n    const { right, bottom, unit } = props;\r\n    const coloredPath = `\r\n        m0 ${unit} h${unit} v-${unit} H${right - unit} v${unit} H${right}\r\n        V${bottom - 4 * unit} h-${unit} v${unit} h-${unit} v${unit}\r\n        h-${unit} v${unit} h-${unit} v${unit} H${unit} v-${unit} h-${unit}z\r\n    `;\r\n\r\n    return (\r\n        <g>\r\n            <path fill={props.color} d={coloredPath} />\r\n\r\n            <rect\r\n                x={unit}\r\n                y={0}\r\n                width={right - unit * 2}\r\n                height={unit}\r\n                fillOpacity=\"0.3\"\r\n            />\r\n            <rect\r\n                x={right - unit}\r\n                y={unit}\r\n                width={unit}\r\n                height={bottom - unit * 5}\r\n                fillOpacity=\"0.3\"\r\n            />\r\n            <rect\r\n                x={0}\r\n                y={unit}\r\n                width={unit}\r\n                height={bottom - unit * 2}\r\n                fillOpacity=\"0.3\"\r\n            />\r\n            <rect\r\n                x={unit}\r\n                y={bottom - unit}\r\n                width={right - unit * 5}\r\n                height={unit}\r\n                fillOpacity=\"0.3\"\r\n            />\r\n            <rect\r\n                x={right - unit * 2}\r\n                y={bottom - unit * 4}\r\n                width={unit}\r\n                height={unit}\r\n                fillOpacity=\"0.3\"\r\n            />\r\n            <rect\r\n                x={right - unit * 3}\r\n                y={bottom - unit * 3}\r\n                width={unit}\r\n                height={unit}\r\n                fillOpacity=\"0.3\"\r\n            />\r\n            <rect\r\n                x={right - unit * 4}\r\n                y={bottom - unit * 2}\r\n                width={unit}\r\n                height={unit}\r\n                fillOpacity=\"0.3\"\r\n            />\r\n            <path\r\n                fillOpacity=\"0.3\"\r\n                d={\r\n                    props.Wide || props.wide\r\n                        ? `m${unit * 3} ${unit} v${unit * 3} h-${unit * 2}\r\n                          v${unit} h${unit * 2} V${bottom - unit * 5}\r\n                          h-${unit * 2} v${unit} h${unit * 2} V${bottom - unit}\r\n                          h${unit} V${unit}\r\n                          `\r\n                        : `m${unit} ${unit * 3} h${unit * 3} v-${unit * 2}\r\n                          h${unit} v${unit * 2} H${right - unit * 5}\r\n                          v-${unit * 2} h${unit} v${unit * 2}\r\n                          H${right - unit} v${unit} H${unit}z`\r\n                }\r\n            />\r\n            <Speaker\r\n                left={right - unit * 7}\r\n                top={bottom - unit * 8}\r\n                unit={unit}\r\n            />\r\n        </g>\r\n    );\r\n};\r\n\r\nexport const Screen = ({ left, top, right, bottom, color, unit }) => {\r\n    const coloredPath = `\r\n        M${left} ${top + unit} h${unit} v-${unit} H${right - unit}\r\n        v${unit} h${unit} V${bottom - unit * 3} h-${unit} v${unit}\r\n        h-${unit} v${unit} h-${unit} v${unit} H${left + unit} v-${unit}\r\n        h-${unit}\r\n    `;\r\n\r\n    return (\r\n        <g>\r\n            <path fill={color} d={coloredPath}></path>\r\n            <rect\r\n                x={left}\r\n                y={top + unit}\r\n                width={unit}\r\n                height={bottom - top - unit * 2}\r\n                fillOpacity=\"0.3\"\r\n            />\r\n            <rect\r\n                x={left + unit}\r\n                y={top}\r\n                width={right - left - unit * 2}\r\n                height={unit}\r\n                fillOpacity=\"0.3\"\r\n            />\r\n            <rect\r\n                x={right - unit}\r\n                y={top + unit}\r\n                width={unit}\r\n                height={bottom - top - unit * 4}\r\n                fillOpacity=\"0.3\"\r\n            />\r\n            <rect\r\n                x={right - unit * 2}\r\n                y={bottom - unit * 3}\r\n                width={unit}\r\n                height={unit}\r\n                fillOpacity=\"0.3\"\r\n            />\r\n            <rect\r\n                x={right - unit * 3}\r\n                y={bottom - unit * 2}\r\n                width={unit}\r\n                height={unit}\r\n                fillOpacity=\"0.3\"\r\n            />\r\n            <rect\r\n                x={left + unit}\r\n                y={bottom - unit}\r\n                width={right - left - unit * 4}\r\n                height={unit}\r\n                fillOpacity=\"0.3\"\r\n            />\r\n        </g>\r\n    );\r\n};\r\n\r\nconst SmallButton = ({ left, top, unit, action }) => {\r\n    const length = unit * 2;\r\n\r\n    const { alpha, bind } = useAlphaPush(action);\r\n\r\n    return (\r\n        <g {...bind}>\r\n            <rect\r\n                x={left}\r\n                y={top}\r\n                width={length}\r\n                height={unit * 2}\r\n                fillOpacity=\"0\"\r\n            />\r\n            <animated.rect\r\n                x={left}\r\n                y={alpha.interpolate((a) => top + unit * 1.5 - (unit / 2) * a)}\r\n                width={length}\r\n                height={unit / 2}\r\n                fillOpacity=\"0.1\"\r\n            />\r\n            <rect\r\n                x={left}\r\n                y={top + unit / 2}\r\n                width={length}\r\n                height={unit}\r\n                fill=\"#faaf00\"\r\n            />\r\n            <rect\r\n                x={left}\r\n                y={top + unit / 2}\r\n                width={length}\r\n                height={unit}\r\n                fillOpacity=\"0.3\"\r\n            />\r\n            <animated.rect\r\n                x={left}\r\n                y={alpha.interpolate((a) => top + (unit / 2) * a)}\r\n                width={length}\r\n                height={unit}\r\n                fill=\"#faaf00\"\r\n            />\r\n        </g>\r\n    );\r\n};\r\n\r\nexport const SmallButtons = ({ unit, coords }) => {\r\n    const [{ small }] = useContext(ButtonsFunctionsContext);\r\n    //console.log(small);\r\n    return (\r\n        <g>\r\n            {coords.map((coord, i) => (\r\n                <SmallButton\r\n                    key={i}\r\n                    left={coord[0]}\r\n                    top={coord[1]}\r\n                    unit={unit}\r\n                    action={small[i].action}\r\n                />\r\n            ))}\r\n        </g>\r\n    );\r\n};\r\n\r\nconst ButtonShadow = animated(({ left, top, right, unit, alpha }) => {\r\n    return (\r\n        <g>\r\n            <rect\r\n                x={left}\r\n                y={top}\r\n                width={unit / 2}\r\n                height={unit / 2}\r\n                fillOpacity={alpha}\r\n            />\r\n            <rect\r\n                x={left + unit / 2}\r\n                y={top + unit / 2}\r\n                width={right - left - unit}\r\n                height={unit / 2}\r\n                fillOpacity={alpha}\r\n            />\r\n            <rect\r\n                x={right - unit / 2}\r\n                y={top}\r\n                width={unit / 2}\r\n                height={unit / 2}\r\n                fillOpacity={alpha}\r\n            />\r\n        </g>\r\n    );\r\n});\r\n\r\nconst Button = ({ left, top, width, height, unit, action }) => {\r\n    const color = \"#faaf00\";\r\n\r\n    const halfUnit = unit / 2;\r\n\r\n    const underPath = `m${left} ${top + width - unit} h${width} v${unit}\r\n    h-${halfUnit} v${halfUnit} H${left + halfUnit}\r\n    v-${halfUnit} h-${halfUnit}z`;\r\n\r\n    const { alpha, bind } = useAlphaPush(action);\r\n\r\n    return (\r\n        <g className=\"button\" {...bind}>\r\n            <ButtonShadow\r\n                left={left}\r\n                top={alpha.interpolate((a) => top + height - (unit / 2) * a)}\r\n                right={left + width}\r\n                unit={unit}\r\n                alpha={0.1}\r\n            />\r\n            <path fill={color} d={underPath} />\r\n            <path fillOpacity=\"0.3\" d={underPath} />\r\n\r\n            <animated.g\r\n                style={{\r\n                    transform: alpha.interpolate(\r\n                        (a) => `translatey(${(unit / 2) * a}px)`\r\n                    ),\r\n                }}\r\n            >\r\n                <rect\r\n                    x={left}\r\n                    y={top + unit / 2}\r\n                    width={width}\r\n                    height={height - unit}\r\n                    fill={color}\r\n                />\r\n                <rect\r\n                    x={left}\r\n                    y={top + unit / 2}\r\n                    width={width}\r\n                    height={height - unit}\r\n                    fillOpacity=\"0.1\"\r\n                />\r\n                <rect\r\n                    x={left + unit / 2}\r\n                    y={top}\r\n                    width={width - unit}\r\n                    height={height}\r\n                    fill={color}\r\n                />\r\n            </animated.g>\r\n        </g>\r\n    );\r\n};\r\n\r\nexport const ArrowButtons = ({ left, top, unit }) => {\r\n    const [{ medium }] = useContext(ButtonsFunctionsContext);\r\n\r\n    //console.log(medium);\r\n\r\n    return (\r\n        <g>\r\n            <Button\r\n                left={left}\r\n                top={top + unit * 2.5}\r\n                width={unit * 2.5}\r\n                height={unit * 2.5}\r\n                unit={unit}\r\n                action={medium.left.action}\r\n            />\r\n            <Button\r\n                left={left + unit * 2.5}\r\n                top={top}\r\n                width={unit * 2.5}\r\n                height={unit * 2.5}\r\n                unit={unit}\r\n                action={medium.up.action}\r\n            />\r\n            <Button\r\n                left={left + unit * 5}\r\n                top={top + unit * 2.5}\r\n                width={unit * 2.5}\r\n                height={unit * 2.5}\r\n                unit={unit}\r\n                action={medium.right.action}\r\n            />\r\n            <Button\r\n                left={left + unit * 2.5}\r\n                top={top + unit * 5}\r\n                width={unit * 2.5}\r\n                height={unit * 2.5}\r\n                unit={unit}\r\n                action={medium.down.action}\r\n            />\r\n        </g>\r\n    );\r\n};\r\n\r\nexport const BigButton = ({ left, top, unit }) => {\r\n    const [{ big }] = useContext(ButtonsFunctionsContext);\r\n    //console.log(big);\r\n    return (\r\n        <Button\r\n            left={left}\r\n            top={top}\r\n            width={unit * 4}\r\n            height={unit * 4}\r\n            unit={unit}\r\n            action={big.action}\r\n        />\r\n    );\r\n};\r\n\r\nconst Diagonal = ({ left, top, unit, alpha }) => {\r\n    return (\r\n        <g>\r\n            <rect\r\n                x={left + unit * 2}\r\n                y={top}\r\n                width={unit}\r\n                height={unit}\r\n                fillOpacity={alpha}\r\n            />\r\n            <rect\r\n                x={left + unit}\r\n                y={top + unit}\r\n                width={unit}\r\n                height={unit}\r\n                fillOpacity={alpha}\r\n            />\r\n            <rect\r\n                x={left}\r\n                y={top + unit * 2}\r\n                width={unit}\r\n                height={unit}\r\n                fillOpacity={alpha}\r\n            />\r\n        </g>\r\n    );\r\n};\r\n\r\nexport const Diagonals = ({ left, top, unit }) => {\r\n    return (\r\n        <g>\r\n            <Diagonal left={left} top={top} unit={unit} alpha={0.5} />\r\n            <Diagonal left={left + unit} top={top} unit={unit} alpha={0.1} />\r\n            <Diagonal\r\n                left={left + unit * 3}\r\n                top={top}\r\n                unit={unit}\r\n                alpha={0.5}\r\n            />\r\n            <Diagonal\r\n                left={left + unit * 4}\r\n                top={top}\r\n                unit={unit}\r\n                alpha={0.1}\r\n            />\r\n        </g>\r\n    );\r\n};\r\n","const slimLayout = (size, unit) => {\r\n    const smallButtonGap = size.width / 3 - unit * 6,\r\n        smallButtonTop = size.height - unit * 20,\r\n        smallButtonLeft = unit * 5;\r\n    return {\r\n        body: {\r\n            right: size.width,\r\n            bottom: size.height,\r\n        },\r\n        screen: {\r\n            left: unit * 2,\r\n            top: unit * 5,\r\n            right: size.width - unit * 2,\r\n            bottom: size.height - unit * 21,\r\n        },\r\n        smallButtons: {\r\n            coords: new Array(4)\r\n                .fill(null)\r\n                .map((c, i) => [\r\n                    smallButtonLeft + (unit * 2 + smallButtonGap) * i,\r\n                    smallButtonTop,\r\n                ]),\r\n        },\r\n        arrowButtons: {\r\n            left: unit * 4,\r\n            top: size.height - unit * 15,\r\n        },\r\n        bigButton: {\r\n            left: size.width - unit * 8,\r\n            top: size.height - unit * 13,\r\n        },\r\n        diagonals: {\r\n            left: unit * 7,\r\n            top: size.height - unit * 6,\r\n        },\r\n    };\r\n};\r\n\r\nexport default slimLayout;\r\n","const squaredLayout = (size, unit) => {\r\n    const smallButtonsLeft = unit * 16.5,\r\n        smallButtonsTop = size.height - unit * 13,\r\n        smallButtonsGap = (size.width - unit * 14 - smallButtonsLeft) / 3;\r\n    return {\r\n        body: {\r\n            wide: true,\r\n            right: size.width,\r\n            bottom: size.height,\r\n        },\r\n        screen: {\r\n            left: unit * 7,\r\n            top: unit * 2,\r\n            right: size.width - unit * 4,\r\n            bottom: smallButtonsTop - unit * 2,\r\n        },\r\n        smallButtons: {\r\n            coords: [\r\n                [smallButtonsLeft + smallButtonsGap, smallButtonsTop],\r\n                [\r\n                    smallButtonsLeft + unit * 2 + smallButtonsGap * 2,\r\n                    smallButtonsTop,\r\n                ],\r\n                [\r\n                    smallButtonsLeft + smallButtonsGap,\r\n                    smallButtonsTop + unit * 4,\r\n                ],\r\n                [\r\n                    smallButtonsLeft + unit * 2 + smallButtonsGap * 2,\r\n                    smallButtonsTop + unit * 4,\r\n                ],\r\n            ],\r\n        },\r\n        arrowButtons: {\r\n            left: unit * 9,\r\n            top: size.height - unit * 14,\r\n        },\r\n        bigButton: {\r\n            left: size.width - unit * 10,\r\n            top: smallButtonsTop + unit / 2,\r\n        },\r\n        diagonals: {\r\n            left: unit * 6,\r\n            top: size.height - unit * 5,\r\n        },\r\n    };\r\n};\r\n\r\nexport default squaredLayout;\r\n","const wideLayout = (size, unit) => {\r\n    const smallButtonTop = unit * 4,\r\n        smallButtonLeft = [\r\n            unit * 6,\r\n            unit * 11,\r\n            size.width - unit * 9,\r\n            size.width - unit * 4,\r\n        ];\r\n    return {\r\n        body: {\r\n            right: size.width,\r\n            bottom: size.height,\r\n            wide: true,\r\n        },\r\n        screen: {\r\n            left: unit * 15,\r\n            top: unit * 2,\r\n            right: size.width - unit * 10,\r\n            bottom: size.height - unit * 2,\r\n        },\r\n        smallButtons: {\r\n            coords: smallButtonLeft.map((l) => [l, smallButtonTop]),\r\n        },\r\n        arrowButtons: {\r\n            left: unit * 6,\r\n            top: (size.height - unit * 7) / 2,\r\n        },\r\n        bigButton: {\r\n            left: size.width - unit * 7.5,\r\n            top: (size.height - unit * 4) / 2,\r\n        },\r\n        diagonals: {\r\n            left: unit * 6,\r\n            top: size.height - unit * 5,\r\n        },\r\n    };\r\n};\r\n\r\nexport default wideLayout;\r\n","import React from \"react\";\r\n\r\nimport {\r\n    Body,\r\n    Screen,\r\n    ArrowButtons,\r\n    SmallButtons,\r\n    BigButton,\r\n    Diagonals,\r\n} from \"./ConsoleComps\";\r\n\r\nimport slimLayout from \"./slimLayout\";\r\nimport squaredLayout from \"./squaredLayout\";\r\nimport wideLayout from \"./wideLayout\";\r\n\r\nexport function ConsoleTemplate({ size, color, children }) {\r\n    const ratio = size.width / size.height;\r\n    var layout, unit;\r\n\r\n    if (ratio <= 0.8) {\r\n        unit = Math.min(size.width / 26, size.height / 46);\r\n\r\n        layout = slimLayout(size, unit);\r\n    } else {\r\n        unit = Math.min(size.width / 46, size.height / 26);\r\n\r\n        layout =\r\n            ratio <= 1.2 ? squaredLayout(size, unit) : wideLayout(size, unit);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <svg\r\n                width={size.width}\r\n                height={size.height}\r\n                version=\"1.1\"\r\n                viewBox={`0 0 ${size.width} ${size.height}`}\r\n            >\r\n                <Body\r\n                    right={layout.body.right}\r\n                    bottom={layout.body.bottom}\r\n                    Wide={layout.body.wide ?? false}\r\n                    unit={unit}\r\n                    color={color}\r\n                />\r\n                <Screen\r\n                    left={layout.screen.left}\r\n                    top={layout.screen.top}\r\n                    right={layout.screen.right}\r\n                    bottom={layout.screen.bottom}\r\n                    unit={unit}\r\n                    color={\"#313131\"}\r\n                />\r\n                <ArrowButtons\r\n                    left={layout.arrowButtons.left}\r\n                    top={layout.arrowButtons.top}\r\n                    unit={unit}\r\n                />\r\n                <SmallButtons coords={layout.smallButtons.coords} unit={unit} />\r\n                <BigButton\r\n                    left={layout.bigButton.left}\r\n                    top={layout.bigButton.top}\r\n                    unit={unit}\r\n                />\r\n                <Diagonals\r\n                    left={layout.diagonals.left}\r\n                    top={layout.diagonals.top}\r\n                    unit={unit}\r\n                />\r\n            </svg>\r\n            <div\r\n                className=\"screen\"\r\n                style={{\r\n                    left: layout.screen.left + unit * 3,\r\n                    top: layout.screen.top + unit * 3,\r\n                    width: layout.screen.right - layout.screen.left - unit * 6,\r\n                    height: layout.screen.bottom - layout.screen.top - unit * 6,\r\n                }}\r\n            >\r\n                {React.cloneElement(React.Children.only(children), {\r\n                    size: {\r\n                        width:\r\n                            layout.screen.right - layout.screen.left - unit * 6,\r\n                        height:\r\n                            layout.screen.bottom - layout.screen.top - unit * 6,\r\n                    },\r\n                })}\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n","/**\r\n * Measure's the element's bounding box and then renders children\r\n */\r\nimport React from \"react\";\r\nimport debounce from \"debounce\";\r\n\r\nclass MeasureAndRender extends React.Component {\r\n    state = {\r\n        measurement: null,\r\n        hasMeasured: false,\r\n    };\r\n\r\n    onWindowResize = debounce(() => {\r\n        this.setState({\r\n            measurement: this.el.getBoundingClientRect(),\r\n        });\r\n    }, this.props.debounce || 100);\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            measurement: this.el.getBoundingClientRect(),\r\n            hasMeasured: true,\r\n        });\r\n\r\n        window.addEventListener(\"resize\", this.onWindowResize);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        // stop listening to window resize\r\n        window.removeEventListener(\"resize\", this.onWindowResize);\r\n    }\r\n\r\n    render() {\r\n        let style = {};\r\n        if (this.props.stretch) {\r\n            style.position = \"absolute\";\r\n            style.top = 0;\r\n            style.right = 0;\r\n            style.bottom = 0;\r\n            style.left = 0;\r\n        }\r\n\r\n        const childrenWithProps = React.Children.map(\r\n            this.props.children,\r\n            (child) => {\r\n                if (React.isValidElement(child)) {\r\n                    return React.cloneElement(child, {\r\n                        size: this.state.measurement,\r\n                    });\r\n                }\r\n                return child;\r\n            }\r\n        );\r\n\r\n        return (\r\n            <div\r\n                className={this.props.className}\r\n                style={style}\r\n                ref={(node) => {\r\n                    this.el = node;\r\n                }}\r\n            >\r\n                {this.state.hasMeasured && childrenWithProps}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MeasureAndRender;\r\n","import React from \"react\";\r\n\r\nimport { ConsoleTemplate } from \"./Template\";\r\nimport MeasureAndRender from \"../MeasureAndRender\";\r\n\r\nimport \"./Console.css\";\r\n\r\nexport default function Console({ color, children }) {\r\n    return (\r\n        <MeasureAndRender className=\"Console\">\r\n            <ConsoleTemplate color={color}>{children}</ConsoleTemplate>\r\n        </MeasureAndRender>\r\n    );\r\n}\r\n","import { Component } from \"react\";\r\nimport { ButtonsFunctionsContext } from \"../ButtonsFunctionsProvider\";\r\n\r\nexport default class GameClass extends Component {\r\n    static contextType = ButtonsFunctionsContext;\r\n\r\n    linkButtons(names = {}) {\r\n        const changeButtons = this.context[1];\r\n\r\n        changeButtons(names, {\r\n            ...((this.restart || this.levels) && {\r\n                small: {\r\n                    ...(this.restart && { 0: this.restart }),\r\n                    ...(this.levels && { 0: this.levels }),\r\n                },\r\n            }),\r\n            ...((this.left || this.right || this.up || this.down) && {\r\n                medium: {\r\n                    ...(this.left && { left: this.left }),\r\n                    ...(this.up && { up: this.up }),\r\n                    ...(this.right && { right: this.right }),\r\n                    ...(this.down && { down: this.down }),\r\n                },\r\n            }),\r\n            ...(this.big && { big: this.big }),\r\n        });\r\n    }\r\n}\r\n","/*\r\n    {\r\n        matrix: [a0, a1, a2, a3,... ai, ... an], //ai natural number\r\n        keys: [k1, k2, k3, ... kj, ...k(n/9)], //kj natural number, kj > k(j-1)\r\n    }\r\n*/\r\n\r\nconst shuffleArray = ([...list]) => {\r\n    list.forEach((__element, index) => {\r\n        const newIndex = Math.floor(Math.random() * list.length);\r\n        [list[index], list[newIndex]] = [list[newIndex], list[index]];\r\n    });\r\n    return list;\r\n};\r\n\r\nconst matrixValuesAreValid = (matrix, p1, p2) =>\r\n    p1 !== p2 && (matrix[p1] === matrix[p2] || matrix[p1] + matrix[p2] === 10);\r\n\r\nconst matrixCheckRow = (matrix, p1, p2) => {\r\n    do {\r\n        p1++;\r\n    } while (p1 < p2 && matrix[p1] === null);\r\n    return p1 === p2 ? true : false;\r\n};\r\n\r\nconst matrixCheckColumn = (matrix, p1, p2) => {\r\n    if (p1 % 9 !== p2 % 9) return false;\r\n\r\n    do {\r\n        p1 += 9;\r\n    } while (p1 < p2 && matrix[p1] === null);\r\n    return p1 === p2 ? true : false;\r\n};\r\n\r\nconst matrixKeyCheckAndClearRow = (keyMatrix, p) => {};\r\n\r\nexport const checkKeyMatrix = ({ ...keyMatrix }, p1, p2) => {\r\n    let wasChanged = false;\r\n\r\n    if (p1 > p2) [p1, p2] = [p2, p1];\r\n\r\n    if (\r\n        matrixValuesAreValid(keyMatrix.matrix, p1, p2) &&\r\n        (matrixCheckRow(keyMatrix.matrix, p1, p2) ||\r\n            matrixCheckColumn(keyMatrix.matrix, p1, p2))\r\n    ) {\r\n        keyMatrix.matrix[p1] = null;\r\n        keyMatrix.matrix[p2] = null;\r\n        wasChanged = true;\r\n    }\r\n    return { wasChanged, keyMatrix };\r\n};\r\n\r\nexport const generateKeyMatrix = (matrixSize) => {\r\n    let matrix = new Array(Math.floor(matrixSize / 2))\r\n        .fill(null)\r\n        .map(() => Math.floor(Math.random() * 9 + 1));\r\n\r\n    return {\r\n        matrix: shuffleArray([\r\n            ...matrix,\r\n            ...matrix,\r\n            matrixSize % 2 && matrix[0],\r\n        ]),\r\n        keys: new Array(Math.ceil(matrixSize / 9))\r\n            .fill(null)\r\n            .map((__element, index) => index),\r\n    };\r\n};\r\n","import React from \"react\";\r\n\r\nimport GameClass from \"../GameClass\";\r\nimport { generateKeyMatrix, checkKeyMatrix } from \"./matrixManipulation\";\r\n\r\nimport \"./Numy.css\";\r\n\r\nconst SquaredOrTall = ({ width, height }) =>\r\n    width > height ? { height, width: height } : { width, height };\r\n\r\nconst squareUnits = 7,\r\n    baseSize = 19,\r\n    addMixBreak = 5;\r\n\r\nconst initState = (matrixSize) => ({\r\n    keyMatrix: generateKeyMatrix(matrixSize),\r\n    addMix: 1,\r\n    selected: null,\r\n});\r\n\r\nconst Cell = {\r\n    Number: ({ val, isSelected, onClick }) => (\r\n        <div onClick={onClick} className={isSelected ? \"selected\" : null}>\r\n            {val}\r\n        </div>\r\n    ),\r\n    Empty: () => <div className=\"empty\"></div>,\r\n};\r\n\r\nclass Numy extends GameClass {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            level: 1,\r\n            ...initState(baseSize),\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.linkButtons({\r\n            medium: {\r\n                left: \"Undo\",\r\n            },\r\n            big: \"Add\",\r\n        });\r\n    }\r\n\r\n    handleCellClick = (index) => {\r\n        const { selected } = this.state;\r\n\r\n        if (selected === null) {\r\n            this.setState({ selected: index });\r\n            return;\r\n        }\r\n        const { wasChanged, keyMatrix } = checkKeyMatrix(\r\n            this.state.keyMatrix,\r\n            selected,\r\n            index\r\n        );\r\n\r\n        this.setState({ ...(wasChanged && { keyMatrix }), selected: null });\r\n    };\r\n\r\n    big = () => {};\r\n\r\n    restart = () => {};\r\n\r\n    render() {\r\n        const { size } = this.props;\r\n        const { keyMatrix } = this.state;\r\n        const gameSize = SquaredOrTall(size);\r\n        const gameUnit = gameSize.width / (squareUnits * 9 + 14);\r\n        return (\r\n            <div className=\"numy\">\r\n                <div\r\n                    className=\"game\"\r\n                    style={{\r\n                        ...gameSize,\r\n                        \"--game-unit\": `${gameUnit}px`,\r\n                    }}\r\n                >\r\n                    <div className=\"table-container\">\r\n                        <div className=\"table\">\r\n                            {keyMatrix.matrix.map((val, index) =>\r\n                                val ? (\r\n                                    <Cell.Number\r\n                                        onClick={() =>\r\n                                            this.handleCellClick(index)\r\n                                        }\r\n                                        key={\r\n                                            keyMatrix.keys[\r\n                                                Math.floor(index / 9)\r\n                                            ] *\r\n                                                10 +\r\n                                            (index % 9)\r\n                                        }\r\n                                        val={val}\r\n                                        isSelected={\r\n                                            this.state.selected === index\r\n                                        }\r\n                                    />\r\n                                ) : (\r\n                                    <Cell.Empty />\r\n                                )\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Numy;\r\n","import Numy from \"./Numy\";\r\n\r\nconst Games = [Numy];\r\n\r\nexport default Games;\r\n","import React from \"react\";\r\n\r\nimport { ButtonsFunctionsProvider } from \"./ButtonsFunctionsProvider\";\r\nimport Console from \"./Console\";\r\nimport Games from \"./Games\";\r\nimport \"./App.css\";\r\n\r\nconst App = () => {\r\n    const CurrentGame = Games[0];\r\n\r\n    return (\r\n        <ButtonsFunctionsProvider>\r\n            <Console color=\"#107091\">\r\n                <CurrentGame />\r\n            </Console>\r\n        </ButtonsFunctionsProvider>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./App.jsx\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}